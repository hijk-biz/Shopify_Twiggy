{%- liquid

  assign background_color = section.settings.background_color

  assign height = section.settings.height
  assign height_mobile = section.settings.height_mobile

  assign section_radius = section.settings.section_radius
  assign section_width = section.settings.section_width
  assign full_width = section.settigns.full_width
  assign layout_height = section.settings.layout_height

  assign interval = section.settings.interval
  assign image_object_fit = section.settings.image_object_fit
  assign play_button_image = section.settings.play_button_image
  assign controls_size_mobile = section.settings.controls_size_mobile
  assign controls_size = section.settings.controls_size
  assign controls_position = section.settings.controls_position

  assign vertical_alignment = section.settings.vertical_alignment
  assign horizontal_alignment = section.settings.horizontal_alignment

  assign padding_top =  section.settings.padding_top
  assign padding_bottom =  section.settings.padding_bottom
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign margin_horizontal_mobile = section.settings.margin_horizontal_mobile
  assign margin_horizontal = section.settings.margin_horizontal

  assign overlay_color = section.settings.overlay_color
  assign overlay_opacity = section.settings.overlay_opacity

  assign title_size = section.settings.title_size
  assign title_size_mobile = section.settings.title_size_mobile
  assign title_color = section.settings.title_color
  assign title_custom = section.settings.title_custom
  assign title_font = section.settings.title_font
  assign title_height = section.settings.title_height

  assign subtitle_size = section.settings.subtitle_size
  assign subtitle_size_mobile = section.settings.subtitle_size_mobile
  assign subtitle_color = section.settings.subtitle_color
  assign subtitle_custom = section.settings.subtitle_custom
  assign subtitle_font = section.settings.subtitle_font
  assign subtitle_height = section.settings.subtitle_height
  assign subtitle_mt = section.settings.subtitle_mt

  assign buttons_mt = section.settings.buttons_mt
  assign buttons_gap = section.settings.buttons_gap

  assign button_size = section.settings.button_size
  assign button_size_mobile = section.settings.button_size_mobile
  assign button_color = section.settings.button_color
  assign button_hover_color = section.settings.button_hover_color
  assign button_custom = section.settings.button_custom
  assign button_font = section.settings.button_font
  assign button_height = section.settings.button_height
  assign button_padding_vertical = section.settings.button_padding_vertical
  assign button_padding_vertical_mobile = section.settings.button_padding_vertical_mobile
  assign button_padding_horizontal = section.settings.button_padding_horizontal
  assign button_padding_horizontal_mobile = section.settings.button_padding_horizontal_mobile
  assign button_radius = section.settings.button_radius
  assign button_border_thickness = section.settings.button_border_thickness
  assign button_border_color = section.settings.button_border_color
  assign button_border_hover_color = section.settings.button_border_hover_color
  assign button_bg_color = section.settings.button_bg_color
  assign button_bg_hover_color = section.settings.button_bg_hover_color
  assign button_style = section.settings.button_style
  assign open_in_new_tab = section.settings.open_in_new_tab

  assign second_button_color = section.settings.second_button_color
  assign second_button_hover_color = section.settings.second_button_hover_color
  assign second_button_border_color = section.settings.second_button_border_color
  assign second_button_border_hover_color = section.settings.second_button_border_hover_color
  assign second_button_bg_color = section.settings.second_button_bg_color
  assign second_button_bg_hover_color = section.settings.second_button_bg_hover_color

  assign play_button_pause_image = section.settings.play_button_pause_image

  assign text_align = ""
  if horizontal_alignment == "center"
  assign text_align = "center"
  elsif horizontal_alignment == "flex-end"
  assign text_align = "right"
  else
  assign text_align = "left"
  endif
  
-%}
<style>
  {{  title_font | font_face: font_display: 'swap' }}
  {{  subtitle_font | font_face: font_display: 'swap' }}
  {{  button_font | font_face: font_display: 'swap' }}
  
  .section-{{ section.id }} {
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
    margin-left: {{ margin_horizontal_mobile }}rem;
    margin-right: {{ margin_horizontal_mobile }}rem;
    overflow: hidden;
    border-radius: {{ section_radius | times: 0.6 | round: 0  }}px;
  }
  
  #shopify-section-{{ section.id }} {
    padding: 0;
    max-width: none;
    width: 100%;
  }

  #shopify-section-{{ section.id }} img {
    height: 100%;
  }

  .section-{{ section.id }}-padding {
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    position: relative;
  }
  
  .ab-banner-{{ section.id }} {
    height: 100%;
    position: relative;
  }

  .ab-banner-slide-{{ section.id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
  }
  
  .ab-banner-slide-{{ section.id }}--active {
    opacity: 1;
    z-index: 1;
  }
  
  .ab-banner-image-{{ section.id }} {
    width: 100%;
    height: 100%;
    object-fit: {{ image_object_fit }};
    position: absolute;
    top: 0;
    left: 0;
  }
  
  .ab-banner-image-{{ section.id }}--desktop {
    display: none;
  }

  .ab-banner-content-{{ section.id }} {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100%;
    max-width: 100%;
    margin: 0 auto;
    height: 100%;
    z-index: 2;
    display: flex;
    flex-direction: column;
    justify-content: {{ vertical_alignment }};
    align-items: {{ horizontal_alignment }};
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
    line-height: 1;
  }
  
  .ab-banner-title-{{ section.id }} {
    text-align: {{ text_align }};
  }

  .ab-banner-title-{{ section.id }} * {
    margin: 0;
    font-size: {{ title_size_mobile }}px;
    color: {{ title_color }};
    line-height: {{ title_height }}%;
    text-transform: unset;
  }

  .ab-banner-subtitle-{{ section.id }} {
    margin-top: {{ subtitle_mt | times: 0.75 | round: 0 }}px;
    text-align: {{ text_align }};
  }

  .ab-banner-subtitle-{{ section.id }} * {
    margin: 0;
    font-size: {{ subtitle_size_mobile }}px;
    color: {{ subtitle_color }};
    line-height: {{ subtitle_height }}%;
    text-transform: unset;
  }

  .ab-banner-button-wrapper-{{ section.id }} {
    margin-top: {{ buttons_mt | times: 0.75 | round: 0 }}px;
    display: flex;
    flex-direction: row;
    gap: {{ buttons_gap | times: 0.75 | round: 0 }}px;
    width: 100%;
  }

  .ab-banner-button-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    max-width: fit-content;
    font-size: {{ button_size_mobile }}px;
    color: {{ button_color }};
    line-height: {{ button_height }}%;
    text-align: center;
    text-transform: unset;
    text-decoration: none;
    padding: {{ button_padding_vertical_mobile }}px {{ button_padding_horizontal_mobile }}px;
    border-radius: {{ button_radius }}px;   
    transition: all 0.25s ease 0s;
    position: relative;
    font-weight: 700;
    z-index: 2;
  }

  .ab-banner-button-{{ section.id }}:hover {   
    color: {{ button_hover_color }};
    transition: all 0.25s ease 0s;
  }

  .ab-banner-button-second-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    max-width: fit-content;
    font-size: {{ button_size_mobile }}px;
    color: {{ second_button_color }};
    line-height: {{ button_height }}%;
    text-align: center;
    text-transform: unset;
    text-decoration: none;
    padding: {{ button_padding_vertical_mobile }}px {{button_padding_horizontal_mobile }}px;
    border-radius: {{ button_radius }}px; 
    transition: all 0.25s ease 0s;
    position: relative;
    font-weight: 700;
    z-index: 2;
  }

  .ab-banner-button-second-{{ section.id }}:hover {  
    color: {{ second_button_hover_color }};
    transition: all 0.25s ease 0s;
  }
  
  .ab-banner-overlay-{{ section.id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: {{ overlay_color }};
    opacity: {{ overlay_opacity }}%;
    pointer-events: none;
    z-index: 1;
  }
  
  .ab-banner-video-wrapper-{{ section.id }} {
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    /*object-fit: cover;*/
  }
  
  .ab-banner-video-wrapper-{{ section.id }},
  .ab-banner-video-{{ section.id }} {
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
  
  .ab-banner-play-button-{{ section.id }} {
    position: absolute;   
    width: {{ controls_size_mobile }}px;
    height: {{ controls_size_mobile }}px;
    z-index: 3;
    cursor: pointer;
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    transition: all 0.25s ease 0s;
  }
  
  .ab-banner-image-wrapper-playing-video-{{ section.id }} .ab-banner-video-wrapper-{{ section.id }} {
    display: block;
  }
  
  .ab-banner-image-wrapper-playing-video-{{ section.id }} .ab-banner-image-wrapper-{{ section.id }} {
    display: none;
  }
  
  .as-banner-slide-has-video-{{ section.id }} .ab-svg-placeholder {
    display: none;
  }

  @media screen and (min-width: 750px) {
    
    .section-{{ section.id }} {
      margin-top: {{ margin_top  }}px;
      margin-bottom: {{ margin_bottom  }}px;
      margin-left: {{ margin_horizontal }}rem;
      margin-right: {{ margin_horizontal }}rem;
      border-radius: {{ section_radius }}px;
    }

    .section-{{ section.id }}-padding {
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
    }

    .ab-banner-image-{{ section.id }}--desktop {
      display: block;
    }
    
    .ab-banner-image-{{ section.id }}--mobile {
      display: none;
    }

    .ab-banner-content-{{ section.id }} {
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }
    
    .ab-banner-button-wrapper-{{ section.id }} {
      margin-top: {{ buttons_mt }}px;
      gap: {{ buttons_gap }}px;
    }

    .ab-banner-title-{{ section.id }} * {
      margin: 0;
      font-size: {{ title_size }}px;
    }

    .ab-banner-subtitle-{{ section.id }} {
      margin-top: {{ subtitle_mt }}px;
    }
  
    .ab-banner-subtitle-{{ section.id }} * {
      margin: 0;
      font-size: {{ subtitle_size }}px;
    }

    .ab-banner-play-button-{{ section.id }} {     
      width: {{ controls_size }}px;
      height: {{ controls_size }}px;
    }

    .ab-banner-button-{{ section.id }} {
      padding: {{ button_padding_vertical }}px {{ button_padding_horizontal }}px;
      font-size: {{ button_size }}px;
    }
    
    .ab-banner-button-second-{{ section.id }} {
      padding: {{ button_padding_vertical }}px {{ button_padding_horizontal }}px;
      font-size: {{ button_size }}px;
    }
  }
  
</style>

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ section_width }}px;
    }
  </style>
{% endunless %}

{% if title_custom %}
  <style>
    .ab-banner-title-{{ section.id }} * {
      font-family: {{ title_font.family }}, {{ title_font.fallback_families }};
      font-weight: {{ title_font.weight }};
      font-style: {{ title_font.style }};
    }
  </style>
{% endif %}

{% if subtitle_custom %}
  <style>
    .ab-banner-subtitle-{{ section.id }} * {
      font-family: {{ subtitle_font.family }}, {{ subtitle_font.fallback_families }};
      font-weight: {{ subtitle_font.weight }};
      font-style: {{ subtitle_font.style }};
    }
  </style>
{% endif %}

{% if button_custom %}
  <style>
    .ab-banner-button-{{ section.id }} {
      font-family: {{ button_font.family }}, {{ button_font.fallback_families }};
      font-weight: {{ button_font.weight }};
      font-style: {{ button_font.style }};
    }

    .ab-banner-button-second-{{ section.id }} {
      font-family: {{ button_font.family }}, {{ button_font.fallback_families }};
      font-weight: {{ button_font.weight }};
      font-style: {{ button_font.style }};
    }
  </style>
{% endif %}

{% if layout_height == 'fixed_height' %}
  <style>
    .ab-banner-{{ section.id }} {
      height: {{ height_mobile }}px;
    }

    @media(min-width: 1024px) {
      .ab-banner-{{ section.id }} {
        height: {{ height }}px;
      }
    }
  </style>
{% elsif  layout_height == 'full_screen'%}
  <style>
    .ab-banner-{{ section.id }} {
      height: 90rem;
    }
  </style>
{% endif %}

{% if text_align == "center" %}
  <style>
    .ab-banner-button-wrapper-{{ section.id }} {
      justify-content: center;
    }
  </style>
{% elsif text_align == "right" %}
  <style>
    .ab-banner-button-wrapper-{{ section.id }} {
      justify-content: end;
    }
  </style>
{% endif %}

{% if button_style == "non_outline" or button_style == "non_outline_arrow" %}
  <style>
    .ab-banner-button-{{ section.id }} {
      transition: all 0.3s ease 0s;
      background-color: {{  button_bg_color }};
    }

    .ab-banner-button-{{ section.id }}:hover {
      transition: all 0.3s ease 0s;
      background-color: {{  button_bg_hover_color }};
    }

    .ab-banner-button-second-{{ section.id }} {
      transition: all 0.3s ease 0s;
      background-color: {{  second_button_bg_color }};
    }

    .ab-banner-button-second-{{ section.id }}:hover {
      transition: all 0.3s ease 0s;
      background-color: {{  second_button_bg_hover_color }};
    }
  </style>
{% elsif button_style == "outline" or button_style == "outline_arrow" %}
  <style>          
    .ab-banner-button-{{ section.id }} {
      transition: all 0.3s ease 0s;
      background-color: {{  button_bg_color }};
      border: {{  button_border_thickness }}px solid {{  button_border_color }};
    }

    .ab-banner-button-{{ section.id }}:hover {
      transition: all 0.3s ease 0s;
      background-color: {{  button_bg_hover_color }};
      border: {{  button_border_thickness }}px solid {{  button_border_hover_color }};
    }

     .ab-banner-button-second-{{ section.id }} {
      transition: all 0.3s ease 0s;
      background-color: {{  second_button_bg_color }};
      border: {{  button_border_thickness }}px solid {{  second_button_border_color }};
    }

    .ab-banner-button-second-{{ section.id }}:hover {
      transition: all 0.3s ease 0s;
      border: {{  button_border_thickness }}px solid {{  second_button_border_hover_color }};
      background-color: {{  second_button_bg_hover_color }};
    }
  </style>
{% elsif button_style == "link" %}
  <style>
    .ab-banner-button-{{ section.id }} {
      padding: 0px !important;
      -webkit-box-shadow: none !important;
      -moz-box-shadow: none !important;
      box-shadow: none !important;
    }
  </style>
{% endif %}  

{% if controls_position == 'center' %}
  <style>
    .ab-banner-play-button-{{ section.id }} {
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);       
    }
  </style>
{% elsif controls_position == 'top' %}
  <style>
    .ab-banner-play-button-{{ section.id }} {
      top: 5%;   
      left: 5%
    }
  </style>
{% elsif controls_position == 'bottom' %}
  <style>
    .ab-banner-play-button-{{ section.id }} {
      bottom: 5%;   
      left: 5%;
    }
  </style>
{% elsif controls_position == 'left' %}
  <style>
    .ab-banner-play-button-{{ section.id }} {
      left: 5%;   
      top: 5%;
    }
  </style>
{% elsif controls_position == 'right' %}
  <style>
    .ab-banner-play-button-{{ section.id }} {
      right: 5%;   
      top: 5%;
    }
  </style>
{% endif %}

{% if play_button_pause_image != blank %}
  <style>
    .as-banner-slide-has-video-{{ section.id }} .ab-banner-play-button-{{ section.id }} .ab-banner-play-btn-image-{{ section.id }} {
      dispplay: block;
    }

    .as-banner-slide-has-video-{{ section.id }} .ab-banner-play-button-{{ section.id }} .ab-banner-pause-btn-{{ section.id }} {
      dispplay: none;
    }
    
    .ab-banner-image-wrapper-playing-video-{{ section.id }} .ab-banner-play-button-{{ section.id }} {
      dispplay: none;
    }

    .ab-banner-image-wrapper-playing-video-{{ section.id }} .ab-banner-play-button-{{ section.id }} .ab-banner-pause-btn-{{ section.id }} {
      dispplay: none;
    }
  </style>
{% else %}
  <style>
    .as-banner-slide-has-video-{{ section.id }} .ab-banner-play-button-{{ section.id }} {
      opacity: 1;
      visibility: visible;
      pointer-events: all;
      transition: all 0.25s ease 0.75s;
    }
    
    .ab-banner-image-wrapper-playing-video-{{ section.id }} .ab-banner-play-button-{{ section.id }} {
      opacity: 0;
      visibility: hidden;
      pointer-events: none;
      transition: all 0.25s ease 0s;
    }
  </style>
{% endif %}

<div style="background-color:{{ background_color }};" class="section-{{ section.id }}" >
  <div class="section-{{ section.id }}-padding">
    <div class="ab-banner-{{ section.id }}" data-interval="{{ interval }}000">
      {% for block in section.blocks %}
        {% if block.settings.video != blank
          or block.settings.video_url.id != blank
        %}
          {% assign has_video = true %}
        {% else %}
          {% assign has_video = false %}
        {% endif %}
        <div
          class="
            ab-banner-slide-{{ section.id }}
            {% if forloop.first %}
              ab-banner-slide-{{ section.id }}--active
            {% endif %}
            {% if has_video == true %}
              as-banner-slide-has-video-{{ section.id }}
            {% endif %}
          "
          data-index="{{ forloop.index0 }}"
          {{ block.shopify_attributes }}
          {% if block.settings.autoplay %}
            data-autoplay="true"
          {% endif %}
        >
          {% assign video = block.settings.video %}
      
         {% assign video = block.settings.video %}
            <div class="ab-banner-video-wrapper-{{ section.id }}">
              {% if block.settings.source == 'uploaded' %}
                {% if video != blank %}
                  {% comment %} We can't use loop here since it won't trigger the 'end' event loop: true {% endcomment %}
                  {% comment %} And using loop:ture doesn't prevent the black screen effect when the video ends {% endcomment %}
                    <video
                      data-src="{{ video.sources[1].url | default: video.sources[0].url}}"
                      {% if block.settings.autoplay %}
                      autoplay
                      {% endif %}
                      muted
                      playsinline
                      preload="none"
                      loop
                      poster="{{ block.settings.image }}"
                      class="lazy {{ 'ab-banner-video-' | append: section.id }}"
                    ></video>
                {% endif %}
              {% endif %}
              {% if block.settings.source == 'external_url' %}
                {% if block.settings.video_url.id != blank %}
                  <template data-youtube-template>
                    <div
                      class="ab-banner-video-{{ section.id }}"
                      data-video-id="{{ block.settings.video_url.id }}"
                      poster="{{ block.settings.image | image_url }}"
                    ></div>
                  </template>
                {% endif %}
              {% endif %}
            </div>


          <div class="ab-banner-image-wrapper-{{ section.id }}">
            {% assign image = block.settings.image %}
            {% if image == blank %}
              {% assign svg_class = 'ab-svg-placeholder ab-banner-image-'
                | append: section.id
              %}
              {{ 'image' | placeholder_svg_tag: svg_class }}
            {% else %}
              <img
                class="
                  ab-banner-image-{{ section.id }}
                  {% if block.settings.image_mobile != blank %}
                    ab-banner-image-{{ section.id }}--desktop
                  {% endif %}
                "
                src="{{ image | img_url: '500x' }}"
                srcset="
                  {{ image | img_url: '500x' }} 500w,
                  {{ image | img_url: '800x' }} 800w,
                  {{ image | img_url: '1200x' }} 1200w,
                  {{ image | img_url: '1600x' }} 1600w,
                  {{ image | img_url: '2000x' }} 2000w,
                  {{ image | img_url: 'master' }} 2400w
                "
                alt="{{ image.alt }}"
              >
            {% endif %}

            {% if block.settings.image_mobile != blank %}
              {% assign image = block.settings.image_mobile %}
              <img
                class="ab-banner-image-{{ section.id }} ab-banner-image-{{ section.id }}--mobile"
                src="{{ image | img_url: '500x' }}"
                srcset="
                  {{ image | img_url: '500x' }} 500w,
                  {{ image | img_url: '800x' }} 800w,
                  {{ image | img_url: '1200x' }} 1200w,
                  {{ image | img_url: '1600x' }} 1600w,
                  {{ image | img_url: '2000x' }} 2000w,
                  {{ image | img_url: 'master' }} 2400w
                "
                alt="{{ image.alt }}"
              >
            {% endif %}
          </div>

          <span class="ab-banner-overlay-{{ section.id }}"></span>

          <div class="ab-banner-play-button-{{ section.id }}">
            {% if play_button_image != blank %}
              <img style="width: 100%;" {% if play_button_pause_image != blank %}class="ab-banner-play-btn-image-{{ section.id }}"{% endif %} src="{{ play_button_image | img_url: 'master' }}" alt="Play button">
            {% else %}
              <svg xmlns="http://www.w3.org/2000/svg" style="width: 100%;" viewBox="0 0 80 81" fill="none">
                <g clip-path="url(#clip0_91_1286)">
                  <path d="M80 40.7427C80 18.6513 62.0914 0.742676 40 0.742676C17.9086 0.742676 0 18.6513 0 40.7427C0 62.8341 17.9086 80.7427 40 80.7427C62.0914 80.7427 80 62.8341 80 40.7427Z" fill="white"/>
                  <path d="M54 40.7427L33 52.867V28.6183L54 40.7427Z" fill="#030303"/>
                </g>
                <defs>
                  <clipPath id="clip0_91_1286">
                    <rect width="80" height="81" fill="white"/>
                  </clipPath>
                </defs>
              </svg>
            {% endif %}
            {% if play_button_pause_image != blank %}
               <img style="width: 100%;" class="ab-banner-pause-btn-{{ section.id }}" src="{{ play_button_pause_image | img_url: 'master' }}" alt="Play button">
            {% endif %}
          </div>

          <div class="ab-banner-content-{{ section.id }}" >
            {% if block.settings.title != blank %}
              <div class="ab-banner-title-{{ section.id }}">
                {{ block.settings.title }}
              </div>
            {% endif %}
            {% if block.settings.subtitle != blank %}
              <div class="ab-banner-subtitle-{{ section.id }}">
                {{ block.settings.subtitle }}
              </div>
            {% endif %}
            <div class="ab-banner-button-wrapper-{{ section.id }}">
              {% if block.settings.button != blank %}
                <a
                  href="{{ block.settings.button_url }}"
                  class="ab-banner-button-{{ section.id }}"
                  {% if open_in_new_tab %}target="_blank"{% endif %}
                >
                  {{ block.settings.button }}
                </a>
              {% endif %}
              {% if block.settings.second_button != blank %}
                <a
                  href="{{ block.settings.second_button_url }}"
                  class="ab-banner-button-second-{{ section.id }}"
                  {% if open_in_new_tab %}target="_blank"{% endif %}
                >
                  {{ block.settings.second_button }}
                </a>
              {% endif %}
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</div>

<script defer src="https://www.youtube.com/iframe_api"></script>
<script src="https://cdn.jsdelivr.net/npm/vanilla-lazyload@19.1.3/dist/lazyload.min.js"></script>                         

<script>
  (function () {

    var lazyLoadInstance = new LazyLoad();

    window.addEventListener(
      "LazyLoad::Initialized",
      function (event) {
        window.lazyLoadInstance = event.detail.instance;
      },
      false
    );
    
    let slideSwitchTimeoutID;
    let videoPlayers = {};
    let hasOnlyOneSlide = false;
    let videos = document.querySelectorAll('.ab-banner-{{ section.id }} video');
    if(videos) {
      videos.forEach(el => {
        setTimeout(()=> {
          el.removeAttribute('loop');
        }, 1000);
      })
    }

    function getNextIndex() {
      const images = document.querySelectorAll(
        '.ab-banner-slide-{{ section.id }}'
      );
      const activeImage = document.querySelector(
        '.ab-banner-slide-{{ section.id }}--active'
      );
      const activeIndex = Array.prototype.indexOf.call(images, activeImage);
      const nextIndex = (activeIndex + 1) % images.length;
      return nextIndex;
    }

    function autoSlideSwitch(index) {
      //console.log('autoSlideSwitch', index);
      const images = document.querySelectorAll(
        '.ab-banner-slide-{{ section.id }}'
      );
      const activeSlide = document.querySelector(
        '.ab-banner-slide-{{ section.id }}--active'
      );
      
      
      const activeIndex = Array.prototype.indexOf.call(images, activeSlide);
      const newActiveSlide = images[index];

      //if (activeIndex === index) return;

      activeSlide.classList.remove('ab-banner-slide-{{ section.id }}--active');
      newActiveSlide.classList.add('ab-banner-slide-{{ section.id }}--active');

      // TODO: Check if we have any videos in the new active slide
      // 1. if we have <video>, play it:
      const oldVideoEl = activeSlide.querySelector('video');
      if (oldVideoEl) {
        oldVideoEl.pause();
      }

      const newVideoEl = newActiveSlide.querySelector('video');
      if (newVideoEl) {
        if (getIfAutoplay(newActiveSlide)) {
          newVideoEl.play();
        }
        // if the video is not playing, show the play button
        if (newVideoEl.paused) {
          handleWhenVideoPaused(newActiveSlide);
        } else {
          handleWhenVideoPlay(newActiveSlide);
        }
        newVideoEl.addEventListener('ended', () => {
          if (hasOnlyOneSlide) {
            newVideoEl.play();
          } else {
            handleWhenVideoPaused(activeSlide);
            autoSlideSwitch(getNextIndex());
          }
        });
      }

      // 2. if we have <template data-youtube-template>, load and unload youtube video
      const oldYoutubeEl = activeSlide.querySelector(
        '.ab-banner-video-{{ section.id }}'
      );
      //if (oldYoutubeEl) unloadYoutubeVideo(activeSlide); // no need to unload

      const newYoutubeEl = newActiveSlide.querySelector(
        '[data-youtube-template]'
      );
      if (newYoutubeEl) loadYoutubeVideo(newActiveSlide);

      if (newVideoEl || newYoutubeEl) {
        // have any video, wait for them to finish before we call the next slide
        //console.log('waiting for video to finish');
        if (!getIfAutoplay(newActiveSlide)) {
          const intervalTime = document.querySelector(
            '.ab-banner-{{ section.id }}'
          ).dataset.interval;
          slideSwitchTimeoutID = setTimeout(() => {
            autoSlideSwitch(getNextIndex());
          }, intervalTime);
        }
      } else {
        // no video, wait for interval time to call next slide
        //console.log('no video, wait for interval time');
        const intervalTime = document.querySelector(
          '.ab-banner-{{ section.id }}'
        ).dataset.interval;
        slideSwitchTimeoutID = setTimeout(() => {
          autoSlideSwitch(getNextIndex());
        }, intervalTime);
      }
    }

    const videoPlayingClass =
      'ab-banner-image-wrapper-playing-video-{{ section.id }}';
    function handleWhenVideoPaused(slideEl) {
      slideEl.classList.remove(videoPlayingClass);
    }
    function handleWhenVideoPlay(slideEl) {
      slideEl.classList.add(videoPlayingClass);
    }

    function getIfAutoplay(slideEl) {
      // check if slideEl has data-autoplay
      const autoplay = slideEl.dataset.autoplay;
      if (autoplay) return true;
      else return false;
    }

    function loadYoutubeVideo(slideEl) {
      const index = slideEl.dataset.index;
      // Check if we have already loaded the video in the videoPlayers:
      if (videoPlayers[index]) {
        if (getIfAutoplay(slideEl)) videoPlayers[index].playVideo();
        return;
      } else if (typeof YT !== 'undefined' && YT.loaded) {
        // print all the if statments:
        const template = slideEl.querySelector('[data-youtube-template]');
        let childEl = template.content.firstElementChild.cloneNode(true);

        const videoWrapper = slideEl.querySelector(
          '.ab-banner-video-wrapper-{{ section.id }}'
        );
        childEl = videoWrapper.appendChild(childEl);

        const videoId = childEl.dataset.videoId;
        const player = new YT.Player(childEl, {
          height: '100%',
          width: '100%',
          videoId: videoId,
          playerVars: {
            mute: 1,
            playinline: 1,
            //loop: 1,
            //playlist: [videoId],
            //autoplay: 1,
            controls: 0,
          },
          // on finished, play next video:
          events: {
            onReady: () => {
              if (getIfAutoplay(slideEl)) {
                player.playVideo();
              }
              // check if the video is playing to see if ios is blocking autoplay:
            },
            onStateChange: (event) => {
              if (event.data === YT.PlayerState.PLAYING) {
                handleWhenVideoPlay(slideEl);
              } else if (event.data === YT.PlayerState.PAUSED) {
                handleWhenVideoPaused(slideEl);
              } else if (event.data === YT.PlayerState.ENDED) {
                if (hasOnlyOneSlide) {
                  player.playVideo();
                } else {
                  autoSlideSwitch(getNextIndex());
                  handleWhenVideoPaused(slideEl);
                }
              }
            },
          },
        });
        videoPlayers[index] = player;
      } else {
        setTimeout(() => loadYoutubeVideo(slideEl), 300);
      }
    }
    function unloadYoutubeVideo(slideEl) {
      const iframe = slideEl.querySelector('iframe');
      if (iframe) {
        iframe.remove();
      }
    }

    function setupPlayButton(slideEl) {
      const playButton = slideEl.querySelector(
        '.ab-banner-play-button-{{ section.id }}'
      );
      if (!playButton) return;
      playButton.addEventListener('click', () => {
        clearTimeout(slideSwitchTimeoutID);
        handleWhenVideoPlay(slideEl);
        try {
          const videoWrapper = slideEl.querySelector(
            '.ab-banner-video-wrapper-{{ section.id }}'
          );
          videoWrapper.classList.add(
            'ab-banner-video-wrapper-{{ section.id }}--playing'
          );
          const videoEl = slideEl.querySelector('video');
          if (videoEl) {
            videoEl.play();
          } else {
            const youtubeEl = slideEl.querySelector('iframe');
            if (youtubeEl) {
              const index = slideEl.dataset.index;
              videoPlayers[index].playVideo();
            }
          }
        } catch (e) {
          console.log(e);
        }
      });
    }

    function Init() {
      const slides = document.querySelectorAll(
        '.ab-banner-slide-{{ section.id }}'
      );
      const size = slides.length;
      if (size < 1) return;
      hasOnlyOneSlide = size === 1 ? true : false;

      // setup play button:
      slides.forEach((slideEl) => {
        setupPlayButton(slideEl);
      });

      autoSlideSwitch(0);

      if (window.Shopify && window.Shopify.designMode)
        document.addEventListener('shopify:section:unload', function (event) {
          if (event.detail.sectionId !== '{{ section.id }}') return;
          if (slideSwitchTimeoutID) clearTimeout(slideSwitchTimeoutID);
          videoPlayers = {};
        });
    }

    Init();
    if (window.Shopify && window.Shopify.designMode) {
      document.addEventListener('shopify:section:load', function (event) {
        if (event.detail.sectionId !== '{{ section.id }}') return;
        Init();
      });
    }
  })();
</script>

{% schema %}
{
  "name": "SS - Video banner",
  "class": "section",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "Section height"
    },
    { 
      "type": "select",
      "id": "layout_height",
      "label": "Height",
      "default": "full_screen",
      "options": [
        { 
          "label": "Full screen",
          "value": "full_screen"
        },
        { 
          "label": "Fixed height",
          "value": "fixed_height"
        },
        { 
          "label": "Auto",
          "value": "auto"
        }
      ]
    },
    {
      "type": "range",
      "id": "height",
      "min": 100,
      "max": 1200,
      "step": 20,
      "unit": "px",
      "label": "Height",
      "default": 700,
      "visible_if": "{{ section.settings.layout_height == 'fixed_height' }}"
    },
    {
      "type": "range",
      "id": "height_mobile",
      "min": 100,
      "max": 1200,
      "step": 20,
      "unit": "px",
      "label": "Height mobile",
      "default": 240,      
      "visible_if": "{{ section.settings.layout_height == 'fixed_height' }}"
    },
    {
      "type": "header",
      "content": "Overlay"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Overlay opacity",
      "default": 0
    },
     {
      "type": "header",
      "content": "Image"
    },
    {
      "type": "range",
      "id": "interval",
      "min": 1,
      "max": 20,
      "label": "Image switch interval",
      "unit": "s",
      "default": 5,
      "info": "(For images) The interval between image switches."
    },
    {
      "type": "select",
      "label": "Image fit",
      "id": "image_object_fit",
      "default": "cover",
      "options": [
        {
          "label": "Cover",
          "value": "cover"
        },
        {
          "label": "Fill",
          "value": "fill"
        }
      ]
    },
    {
      "type": "header",
      "content": "Controls"
    },
    {
      "type": "image_picker",
      "id": "play_button_image",
      "label": "Play button image (optional)",
      "info": "Overrides the default play button"
    },
    {
      "type": "image_picker",
      "id": "play_button_pause_image",
      "label": "Pause button image (optional)"
    },
    {
      "type": "select",
      "label": "Position",
      "id": "controls_position",
      "default": "top",
      "options": [
        {
          "label": "Top",
          "value": "top"
        },
        {
          "label": "Bottom",
          "value": "bottom"
        },
        {
          "label": "Center",
          "value": "center"
        },
        {
          "label": "Left",
          "value": "left"
        },
        {
          "label": "Right",
          "value": "right"
        }
      ]
    },
    {
      "type": "range",
      "id": "controls_size",
      "min": 0,
      "max": 150,
      "step": 5,
      "unit": "px",
      "label": "Size",
      "default": 80
    },
    {
      "type": "range",
      "id": "controls_size_mobile",
      "min": 0,
      "max": 150,
      "step": 5,
      "unit": "px",
      "label": "Size - mobile",
      "default": 80
    },
    {
      "type": "header",
      "content": "Content alignment"
    },
    {
      "type": "select",
      "id": "vertical_alignment",
      "label": "Position",
      "options": [
        {
          "value": "flex-start",
          "label": "Top"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "flex-end",
          "label": "Bottom"
        }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "horizontal_alignment",
      "label": "Alignment",
      "options": [
        {
          "value": "flex-start",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "flex-end",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Title"
    },
    {
      "type": "checkbox",
      "id": "title_custom",
      "label": "Use custom font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "title_font",
      "label": "Font family",
      "default": "josefin_sans_n4",
      "visible_if": "{{ section.settings.title_custom }}"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Font size",
      "default":50
    },
    {
      "type": "range",
      "id": "title_size_mobile",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Font size - mobile",
      "default": 32
    },
    {
      "type": "range",
      "id": "title_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "%",
      "label": "Height",
      "default": 130
    },
    {
      "type": "header",
      "content": "Subtitle"
    },
    {
      "type": "checkbox",
      "id": "subtitle_custom",
      "label": "Use custom font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "subtitle_font",
      "label": "Font family",
      "default": "josefin_sans_n4",      
      "visible_if": "{{ section.settings.subtitle_custom }}"
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Font size",
      "default": 16
    },
    {
      "type": "range",
      "id": "subtitle_size_mobile",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Font size - mobile",
      "default": 16
    },
    {
      "type": "range",
      "id": "subtitle_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "%",
      "label": "Height",
      "default": 130
    },
    {
      "type": "range",
      "id": "subtitle_mt",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Margin top",
      "default": 20
    },
    {
      "type": "header",
      "content": "Buttons"
    },
    {
      "type": "range",
      "id": "buttons_mt",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Margin top",
      "default": 20
    },
    {
      "type": "range",
      "id": "buttons_gap",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Gap",
      "default": 20
    },
    {
      "type": "header",
      "content": "Button"
    },
    {
      "type": "text",
      "id": "button",
      "label": "Button label",
      "default": "Shop now"
    },
    {
      "type": "url",
      "id": "url",
      "label": "Button link"
    },
    {
      "type": "checkbox",
      "id": "open_in_new_tab",
      "label": "Open link in new tab",
      "default": false
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Style",
      "default": "outline",
      "options": [
        {
          "label": "Link",
          "value": "link"
        },
        {
          "label": "Non-outline",
          "value": "non_outline"
        },
        {
          "label": "Non-outline & arrow",
          "value": "non_outline_arrow"
        },
        {
          "label": "Outline",
          "value": "outline"
        },
        {
          "label": "Outline & arrow",
          "value": "outline_arrow"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "button_custom",
      "label": "Use custom font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "button_font",
      "label": "Font family",
      "default": "josefin_sans_n4",
      "visible_if": "{{ section.settings.button_custom }}"
    },
    {
      "type": "range",
      "id": "button_size",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "range",
      "id": "button_size_mobile",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Font size - mobile",
      "default": 14
    },
    {
      "type": "range",
      "id": "button_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "%",
      "label": "Line height",
      "default": 100
    },
    {
      "type": "checkbox",
      "id": "button_padding_advanced",
      "label": "Advanced padding settings",
      "default": false,
      "visible_if": "{{ section.settings.button_style != 'link' }}"
    },
    {
      "type": "range",
      "id": "button_padding_horizontal",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding horizontal",
      "default": 32,
      "visible_if": "{{ section.settings.button_style != 'link' and section.settings.button_padding_advanced }}"
    },
    {
      "type": "range",
      "id": "button_padding_horizontal_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding horizontal - mobile",
      "default": 32,
      "visible_if": "{{ section.settings.button_style != 'link' and section.settings.button_padding_advanced }}"
    },
    {
      "type": "range",
      "id": "button_padding_vertical",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding vertical",
      "default": 16,
      "visible_if": "{{ section.settings.button_style != 'link' and section.settings.button_padding_advanced }}"
    },
    {
      "type": "range",
      "id": "button_padding_vertical_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Padding vertical - mobile",
      "default": 16,
      "visible_if": "{{ section.settings.button_style != 'link' and section.settings.button_padding_advanced }}"
    },
    {
      "type": "range",
      "id": "button_radius",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Roundness",
      "default": 100,
      "visible_if": "{{ section.settings.button_style != 'link' and section.settings.button_padding_advanced }}"
    },
    {
      "type": "range",
      "id": "button_border_thickness",
      "min": 1,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Border thickness",
      "default": 1,
      "visible_if": "{{ section.settings.button_style == 'outline' or section.settings.button_style == 'outline_arrow' }}"
    },
    {
      "type": "range",
      "id": "button_mt",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Margin top",
      "default": 24
    },
    {
      "type": "range",
      "id": "button_mt_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Margin top - mobile",
      "default": 16
    },    
    {
      "type": "header",
      "content": "First button colors"
    },
    {
      "type": "color",
      "label": "Text",
      "id": "button_color",
      "default": "#121212"
    },
    {
      "type": "color",
      "label": "Text hover",
      "id": "button_hover_color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "label": "Background",
      "id": "button_bg_color",
      "default": "#FFFFFF",
      "visible_if": "{{ section.settings.button_style != 'link' }}"
    },
    {
      "type": "color",
      "label": "Background hover",
      "id": "button_bg_hover_color",
      "default": "#121212",
      "visible_if": "{{ section.settings.button_style != 'link' }}"
    },
    {
      "type": "color",
      "label": "Border",
      "id": "button_border_color",
      "default": "#121212",
      "visible_if": "{{ section.settings.button_style == 'outline' or section.settings.button_style == 'outline_arrow' }}"
    },
    {
      "type": "color",
      "label": "Border hover",
      "id": "button_border_hover_color",
      "default": "#121212",
      "visible_if": "{{ section.settings.button_style == 'outline' or section.settings.button_style == 'outline_arrow' }}"
    },
    {
      "type": "header",
      "content": "Second button colors"
    },
    {
      "type": "color",
      "label": "Text",
      "id": "second_button_color",
      "default": "#121212"
    },
    {
      "type": "color",
      "label": "Text hover",
      "id": "second_button_hover_color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "label": "Background",
      "id": "second_button_bg_color",
      "default": "#FFFFFF",
      "visible_if": "{{ section.settings.button_style != 'link' }}"
    },
    {
      "type": "color",
      "label": "Background hover",
      "id": "second_button_bg_hover_color",
      "default": "#121212",
      "visible_if": "{{ section.settings.button_style != 'link' }}"
    },
    {
      "type": "color",
      "label": "Border",
      "id": "second_button_border_color",
      "default": "#121212",
      "visible_if": "{{ section.settings.button_style == 'outline' or section.settings.button_style == 'outline_arrow' }}"
    },
    {
      "type": "color",
      "label": "Border hover",
      "id": "second_button_border_hover_color",
      "default": "#121212",
      "visible_if": "{{ section.settings.button_style == 'outline' or section.settings.button_style == 'outline_arrow' }}"
    },
    {
      "type": "header",
      "content": "Section Colors"
    },
    {
      "type": "color",
      "label": "Title",
      "id": "title_color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "label": "Subtitle",
      "id": "subtitle_color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "overlay_color",
      "label": "Overlay",
      "default": "#000000"
    },
    {
      "type": "color",
      "label": "Section background color",
      "id": "background_color",
      "default": "#535353"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_horizontal",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "rem",
      "label": "Sides",
      "default": 3
    },
    {
      "type": "range",
      "id": "padding_horizontal_mobile",
      "min": 0,
      "max": 15,
      "step": 0.5,
      "unit": "rem",
      "label": "Sides - mobile",
      "default": 1.5
    },
    {
      "type": "header",
      "content": "Section margin"
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top",
      "default": 4
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom",
      "default": 4
    },
    {
      "type": "range",
      "id": "margin_horizontal",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "rem",
      "label": "Sides",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_horizontal_mobile",
      "min": 0,
      "max": 15,
      "step": 0.5,
      "unit": "rem",
      "label": "Sides - mobile",
      "default": 0
    },
    {
      "type": "header",
      "content": "Section width"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full width",
      "default": false
    },
    {
      "type": "range",
      "id": "section_width",
      "min": 800,
      "max": 2000,
      "step": 100,
      "unit": "px",
      "label": "Section content max width",
      "default": 1200,
      "visible_if": "{{ section.settings.full_width == false }}"
    },
    {
      "type": "range",
      "id": "section_radius",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Section roundness",
      "default": 0
    },
    {
      "type": "checkbox",
      "id": "lazy",
      "label": "Lazy load",
      "info": "Lazy load images below fold for speed optimisation",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "header",
          "content": "Video",
          "info": "If not set, image will be used instead."
        },
        {
          "type": "checkbox",
          "id": "autoplay",
          "label": "Autoplay",
          "default": true
        },
        {
          "type": "select",
          "label": "Source",
          "id": "source",
          "default": "uploaded",
          "options": [
            {
              "label": "Uploaded",
              "value": "uploaded"
            },
            {
              "label": "External URL",
              "value": "external_url"
            }
          ]
        },
        {
          "type": "video",
          "id": "video",
          "label": "Shopify-hosted video",
          "visible_if": "{{ block.settings.source == 'uploaded' }}"
        },
        {
          "type": "video_url",
          "id": "video_url",
          "label": "Youtube video URL",
          "accept": ["youtube"],
          "visible_if": "{{ block.settings.source == 'external_url' }}"
        },
        {
          "type": "header",
          "content": "Image",
          "info": "Image if no video, or before pressing play"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "image_picker",
          "id": "image_mobile",
          "label": "Image - mobile",
          "info": "Optional"
        },
        {
          "type": "header",
          "content": "Title"
        },
        {
          "type": "richtext",
          "id": "title",
          "label": "Title",
          "default": "<h1>Meet The Perfect Travel Shoes</h1>"
        },
        {
          "type": "header",
          "content": "Subtitle"
        },
        {
          "type": "richtext",
          "id": "subtitle",
          "label": "Subtitle",
          "default": "<p>Super Packable. Versatile. And All-Day (And Night) Adventure Ready.</p>"
        },
        {
          "type": "header",
          "content": "Buttons"
        },
        {
          "type": "text",
          "id": "button",
          "label": "Text",
          "default": "Shop Now"
        },
        {
          "type": "url",
          "id": "button_url",
          "label": "URL",
          "default": "/collections/all"
        },
        {
          "type": "text",
          "id": "second_button",
          "label": "Second text",
          "default": "Shop Now"
        },
        {
          "type": "url",
          "id": "second_button_url",
          "label": "Second URL",
          "default": "/collections/all"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "SS - Video Banner",
      "blocks": [
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}